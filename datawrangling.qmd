---
title: "Untitled"
format: html
---

```{r}
library(tidyverse)
library(ggplot2)
```

```{r warning=FALSE}
data1 <- read_csv("data/gni_gdp_lifeexp.csv", na = c(".."))
data2 <- read_csv("data/expected_years_of_schooling.csv", na = c(".."))
```

```{r}
#| echo: false
data <- rbind(data1, data2)
```

```{r}
for (year in 2000:2022) {
  old_name <- paste0(year, " [YR", year, "]")
  new_name <- as.character(year)
  names(data)[names(data) == old_name] <- new_name
}

start_year <- 2000
end_year <- 2022
data <- data %>%
  filter(if_any(`2000`:`2022`, ~ !is.na(.)))

data0 <- data %>%
  select(-c(`Country Code`, `Series Code`)) %>% 
  rename("Country" = "Country Name",
         "variable" = "Series Name"
  )

data0 <- data0 %>% 
  pivot_longer(cols = starts_with("20"),
               names_to = "year",
               values_to = "value")

data3 <- data0 %>% 
  pivot_wider( names_from = variable,
               values_from = value)

macro_trends <- data3 %>% 
  rename(
    "life_exp" = "Life expectancy at birth, total (years)",
    "gni" = "GNI per capita (constant 2015 US$)",
    "gdp" = "GDP per capita (constant 2015 US$)",
    "yrs_sch" = "Expected years of schooling"
  )
```


```{r}
#| label: impute-missing

library(mice)

# change variabl types so all included in mice for imputation
macro_trends <- macro_trends |>
  mutate(Country = as.factor(Country)
        , year = parse_number(year))

# visualize missingness patterns
md.pattern(macro_trends, rotate.names = TRUE)
naniar::vis_miss(macro_trends)

imp <- mice(macro_trends)
imp

check <- complete(imp, "broad")
imp_dat <- complete(imp, "long")

imp_dat_avg <- imp_dat |>
  group_by(Country, year) |>
  summarize(across(c(life_exp, gni, gdp, yrs_sch), ~ mean(.)
                   , .names="{col}_mean")
            , across(c(life_exp, gni, gdp, yrs_sch), ~ min(.)
                     , .names="{col}_min")
            , across(c(life_exp, gni, gdp, yrs_sch), ~ max(.)
                     , .names="{col}_max")
            , across(c(life_exp, gni, gdp, yrs_sch), ~ sd(.)
                     , .names="{col}_sd")) |>
  select(Country, year, starts_with("gdp"), starts_with("life_exp"))

# keep mean for simplicity / for class project 
# do ***NOT*** do this in real life
macro_trends_imp <- imp_dat |>
  group_by(Country, year) |>
  summarize(across(c(life_exp, gni, gdp, yrs_sch), ~ mean(.)))

write_csv(macro_trends, "data/macro_trends_imp.csv")
```
```{r}

set.seed(231)  
k_value <- 4  

latest_data <- macro_trends_imp %>%
  group_by(Country) %>%
  filter(year == max(year))  

# Select the variables for clustering
cluster_data <- latest_data[, c("life_exp", "gni", "gdp", "yrs_sch")]

# Standardizing variables
scaled_data <- scale(cluster_data)

# Performing k-means clustering
kmeans_result <- kmeans(scaled_data, centers = k_value)

# Adding cluster information to the original data
macro_trends_with_clusters <- cbind(macro_trends, cluster = as.factor(kmeans_result$cluster))

# Scatterplot matrix of clusters based on scaled variables
ggpairs(macro_trends_with_clusters, aes(color = cluster)
        , columns = c("life_exp", "gni", "gdp", "yrs_sch", "cluster")
        , upper = list(continuous = "blank")
        , title = "Scatterplot Matrix with Clusters"
        , progress = FALSE) +
  theme(text = element_text(size = 8))

summary_by_cluster <- macro_trends_with_clusters %>%
  group_by(cluster) %>%
  summarise(across(c(life_exp, gni, gdp, yrs_sch), mean, na.rm = TRUE))

summary_by_cluster
```

```{r}



```


